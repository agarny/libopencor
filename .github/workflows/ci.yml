name: ci

on:
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  ci:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: 'Windows static library'
            os: windows-2016
            build_type: Release
            code_analysis: OFF
            code_coverage_gcov: OFF
            code_coverage_llvm_cov: OFF
            javascript_bindings: OFF
            python_bindings: OFF
            shared_libs: OFF
          - name: 'Windows shared library'
            os: windows-2016
            build_type: Release
            code_analysis: OFF
            code_coverage_gcov: OFF
            code_coverage_llvm_cov: OFF
            javascript_bindings: OFF
            python_bindings: OFF
            shared_libs: ON
          - name: 'Linux static library'
            os: ubuntu-20.04
            build_type: Release
            code_analysis: OFF
            code_coverage_gcov: OFF
            code_coverage_llvm_cov: OFF
            javascript_bindings: OFF
            python_bindings: OFF
            shared_libs: OFF
          - name: 'Linux shared library'
            os: ubuntu-20.04
            build_type: Release
            code_analysis: OFF
            code_coverage_gcov: OFF
            code_coverage_llvm_cov: OFF
            javascript_bindings: OFF
            python_bindings: OFF
            shared_libs: ON
          - name: 'macOS static library'
            os: macos-11
            build_type: Release
            code_analysis: OFF
            code_coverage_gcov: OFF
            code_coverage_llvm_cov: OFF
            javascript_bindings: OFF
            python_bindings: OFF
            shared_libs: OFF
          - name: 'macOS shared library'
            os: macos-11
            build_type: Release
            code_analysis: OFF
            code_coverage_gcov: OFF
            code_coverage_llvm_cov: OFF
            javascript_bindings: OFF
            python_bindings: OFF
            shared_libs: ON
          - name: 'Unit testing'
            os: ubuntu-20.04
            build_type: Debug
            code_analysis: OFF
            code_coverage_gcov: OFF
            code_coverage_llvm_cov: OFF
            javascript_bindings: OFF
            python_bindings: OFF
            shared_libs: ON
            target: unit_testing
          - name: 'JavaScript unit testing'
            os: ubuntu-20.04
            build_type: Debug
            code_analysis: OFF
            code_coverage_gcov: OFF
            code_coverage_llvm_cov: OFF
            javascript_bindings: ON
            python_bindings: OFF
            shared_libs: ON
            target: javascript_unit_testing
          - name: 'Python unit testing'
            os: ubuntu-20.04
            build_type: Debug
            code_analysis: OFF
            code_coverage_gcov: OFF
            code_coverage_llvm_cov: OFF
            javascript_bindings: OFF
            python_bindings: ON
            shared_libs: ON
            target: python_unit_testing
          - name: 'Code formatting'
            os: macos-11
            build_type: Release
            code_analysis: OFF
            code_coverage_gcov: OFF
            code_coverage_llvm_cov: OFF
            javascript_bindings: OFF
            python_bindings: OFF
            shared_libs: OFF
            target: code_formatting
          - name: 'Code analysis'
            os: macos-11
            build_type: Release
            code_analysis: ON
            code_coverage_gcov: OFF
            code_coverage_llvm_cov: OFF
            javascript_bindings: OFF
            python_bindings: OFF
            shared_libs: OFF
          - name: 'Coverage using gcov'
            os: ubuntu-20.04
            build_type: Release
            code_analysis: OFF
            code_coverage_gcov: ON
            code_coverage_llvm_cov: OFF
            javascript_bindings: OFF
            python_bindings: OFF
            shared_libs: ON
            target: code_coverage_gcov
          - name: 'Coverage using llvm-cov'
            os: macos-11
            build_type: Release
            code_analysis: OFF
            code_coverage_gcov: OFF
            code_coverage_llvm_cov: ON
            javascript_bindings: OFF
            python_bindings: OFF
            shared_libs: ON
            target: code_coverage_llvm_cov
          - name: 'Memory checks'
            os: ubuntu-20.04
            build_type: Debug
            code_analysis: OFF
            code_coverage_gcov: OFF
            code_coverage_llvm_cov: OFF
            javascript_bindings: OFF
            python_bindings: OFF
            shared_libs: ON
            target: memory_checks
    env:
      BUILDCACHE_COMPRESS_FORMAT: ZSTD
      BUILDCACHE_DEBUG: -1
      BUILDCACHE_DIRECT_MODE: true
      BUILDCACHE_LOG_FILE: ""
    steps:
      - name: Check out libOpenCOR
        uses: actions/checkout@v2
      - name: Install CMake and Ninja
        uses: lukka/get-cmake@latest
      - name: Install buildcache
        if: ${{ matrix.target != 'code_formatting' }}
        uses: mikehardy/buildcache-action@v1
        with:
          cache_key: ${{ matrix.name }}
      - name: Install Emscripten
        if: ${{ matrix.javascript_bindings == 'ON' }}
        uses: mymindstorm/setup-emsdk@v9
      - name: Install pytest
        if: ${{ matrix.python_bindings == 'ON' }}
        run: pip install pytest
      - name: Install ClangFormat
        if: ${{ matrix.target == 'code_formatting' }}
        run: brew install clang-format
      - name: Install gcovr
        if: ${{ matrix.target == 'code_coverage_gcov' }}
        run: sudo apt install gcovr
      - name: Install Valgrind
        if: ${{ matrix.target == 'memory_checks' }}
        run: sudo apt install valgrind
      - name: Configure MSVC
        if: ${{ runner.os == 'Windows' }}
        uses: ilammy/msvc-dev-cmd@v1
      - name: Build libOpenCOR
        run: |
          mkdir build
          cd build
          cmake -G Ninja -DBUILD_TYPE=${{ matrix.build_type }} -DCODE_ANALYSIS=${{ matrix.code_analysis }} -DCODE_COVERAGE_GCOV=${{ matrix.code_coverage_gcov }} -DCODE_COVERAGE_LLVM_COV=${{ matrix.code_coverage_llvm_cov }} -DJAVASCRIPT_BINDINGS=${{ matrix.javascript_bindings }} -DPYTHON_BINDINGS=${{ matrix.python_bindings }} -DSHARED_LIBS=${{ matrix.shared_libs }} ..
          ninja ${{ matrix.target }}
